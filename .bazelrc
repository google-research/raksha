try-import %workspace%/gcb/rbe/remote.bazelrc

# TODO(#167): Remove `-Wno-deprecated-declarations` when glog is updated.

build --cxxopt='-std=c++17'
build --cxxopt='-Werror' --cxxopt='-Wall'
# This feature disables warnings in include paths from external repos. This is
# useful because it allows us to ignore non-serious flaws in code for which we
# are not directly responsible.
build --features=external_include_paths
build --cxxopt='-Wno-deprecated-declarations'

# Why are we doing this when Souffle-generated C++ clearly uses exceptions?
# Well, Google famously does not like C++ exceptions in its internal codebase,
# so we will need to explicitly override that in Raksha files everywhere we
# build Souffle C++ code to have Raksha build when imported into Google. This
# default acts as a simulation of that property of Google's internal codebase.
build --cxxopt='-fno-exceptions'
build --host_cxxopt='-std=c++17'
# Note: We usually try to keep the cxxopt and host_cxxopt consistent. That is
# not a good idea for this line. It appears that adding -Werror to host_cxxopt
# causes the compiler to use this flag when building dependencies that we build
# from source. This causes the build to fail if our source dependencies are not
# warning-clean. We also comment out -Wall so that we do not receive extra
# warnings from our third party packages.
# build --host_cxxopt='-Werror' --host_cxxopt='-Wall'
build --host_cxxopt='-Wno-deprecated-declarations'

# These are needed on systems with GLIBC > 2.34-8 to build google-fuzztest
# which has these errors.
build --cxxopt='-Wno-error=sign-compare'
build --cxxopt='-Wno-error=attributes'
build --host_cxxopt='-Wno-error=sign-compare'
build --host_cxxopt='-Wno-error=attributes'
# Annoyingly, in the fuzztest library, their attempt to turn off the `-Wpsabi`
# warning in Clang causes Clang to complain about an unknown warning flag. This
# is our attempt to work around that.
build --cxxopt='-Wno-unknown-warning-option'
build --host_cxxopt='-Wno-unknown-warning-option'
# The fuzztest library also has a conflict in one of its `.cc` files in
# a macro. When https://github.com/google/fuzztest/issues/41 is fixed, we
# should re-enable this warning.
build --cxxopt='-Wno-macro-redefined'
build --host_cxxopt='-Wno-macro-redefined'
build --cxxopt='-Wno-error'

# Similarly, we should not set this flag that we're using as a debugging
# assistant when compiling third party libraries.
# build --host_cxxopt='-fno-exceptions'

build --cxxopt='-Wno-unused-const-variable'
build --cxxopt='-Wno-thread-safety-reference'
build --cxxopt='-Wno-implicit-int-float-conversion'

# ASAN config for exposing memory errors.
build:asan --strip=never
build:asan --copt -fsanitize=address
build:asan --copt -DADDRESS_SANITIZER
build:asan --copt -O1
build:asan --copt -g
build:asan --copt -fno-omit-frame-pointer
build:asan --linkopt -fsanitize=address
