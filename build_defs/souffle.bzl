#-----------------------------------------------------------------------------
# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https:#www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#-----------------------------------------------------------------------------

def gen_souffle_cxx_code(
        name,
        src,
        all_principals_own_all_tags = False,
        included_dl_scripts = [],
        for_test = False,
        visibility = None):
    """Generates a C++ file for the given datalog file.

    Args:
      name: String; Name of the library.
      src: String; The datalog program.
      all_principals_own_all_tags: allows basically turning off the auth logic aspect.
      included_dl_scripts: List; List of labels indicating datalog files included by src.
      for_test: bool; Whether to prepare the generated code to be used in a test environment or not.
      visibility: List; List of visibilities.
    """

    cc_file = name + ".cpp"

    testonly = None
    if for_test:
        testonly = True

    # If testonly was not explicitly set by the caller, set it based upon the
    # value of all_principals_own_all_tags. If the caller tried to explicitly
    # set all_principals_own_all_tags and set testonly to False, complain.
    if not for_test:
        testonly = all_principals_own_all_tags
    elif (not for_test) and (all_principals_own_all_tags):
        fail("Cannot set all_principals_own_all_tags to True if not for_test!")

    include_str = ""

    include_dir_opts = [
        "--include-dir=`dirname $(location {})`".format(include_file)
        for include_file in included_dl_scripts
    ]

    include_opts_str = " ".join(include_dir_opts)

    macro_list = []
    if for_test:
        macro_list += ["TEST=1"]
    if all_principals_own_all_tags:
        macro_list += ["ALL_PRINCIPALS_OWN_ALL_TAGS=1"]

    macro_str_prefix = ""
    macro_str_suffix = ""
    first = True
    for macro in macro_list:
        macro_str_prefix = "--macro='"
        macro_str_suffix = "'"
        break

    macro_str = macro_str_prefix + " ".join(macro_list) + macro_str_suffix

    native.genrule(
        name = name,
        srcs = [src] + included_dl_scripts,
        outs = [cc_file],
        testonly = testonly,
        cmd =
            "$(location @souffle//:souffle) {include_str} {macros} -g $@ $(location {src_rule})".format(include_str = include_opts_str, macros=macro_str, src_rule = src),
        tools = ["@souffle//:souffle"],
        visibility = visibility,
    )

def souffle_cc_library(
        name,
        src,
        testonly = None,
        visibility = None):
    """Generates a C++ interface for the given datalog file.

    Args:
      name: String; Name of the library.
      src: String; The datalog program.
      testonly: bool; Whether the generated rules should be testonly.
      visibility: List; List of visibilities.
    """
    native.cc_library(
        name = name,
        srcs = [src],
        testonly = testonly,
        copts = [
            "-Iexternal/souffle/src/include/souffle",
            "-std=c++17",
            # We didn't author this C++ file, it is generated by Souffle. We
            # don't care about non-critical issues in it. Turn off warnings.
            "-w",
        ],
        defines = [
            "__EMBEDDED_SOUFFLE__",
        ],
        deps = ["@souffle//:souffle_include_lib"],
        alwayslink = True,
        visibility = visibility,
    )

def souffle_cc_binary(
        name,
        src,
        testonly = None,
        visibility = None):
    """Generates an executable for the given datalog file.

    Args:
      name: String; Name of the library.
      src: String; The datalog program.
      testonly: bool; Whether the generated rules should be testonly.
      visibility: List; List of visibilities.
    """
    native.cc_binary(
        name = name,
        srcs = [src],
        testonly = testonly,
        copts = [
            "-Iexternal/souffle/src/include/souffle",
            "-std=c++17",
            # We didn't author this C++ file, it is generated by Souffle. We
            # don't care about non-critical issues in it. Turn off warnings.
            "-w",
        ],
        deps = ["@souffle//:souffle_include_lib"],
        visibility = visibility,
    )
