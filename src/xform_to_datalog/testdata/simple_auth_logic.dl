.type SomeType <: symbol
.type DummyType <: symbol
.decl says_cond1(speaker: Principal, someType: SomeType)
.decl grounded_dummy(dummy_param: DummyType)
.decl says_isSomeType(speaker: Principal, x: SomeType)
.decl says_isNumber(speaker: Principal, x: number)
.decl says_fact1(speaker: Principal, someType: SomeType)
.decl says_canActAs(speaker: Principal, p1: Principal, p2: Principal)
says_fact1("prin1", thing_x) :- says_cond1("prin1", thing_x), says_isSomeType("prin1", thing_x).
says_cond1("prin1", "foo").
says_isPrincipal("prin1", "prin1").
says_isSomeType("prin1", "foo").
says_isPrincipal("prin1", "prin1").
says_isSomeType("prin1", "foo").
grounded_dummy("dummy_var").
