//-----------------------------------------------------------------------------
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//-----------------------------------------------------------------------------

// A file containing one-off rules for disallowed usages in the multimic demo.
//
isUsage("ASR").
isUsage("Streaming").
isUsage("Recording").

disallowedUsage(owner, usage, owner, "RawAudio") :-
   isUsage(usage),
   mayHaveTag(ap, owner, "RawAudio"),
   mayHaveTag(ap, owner, cat("Does", usage)),
   !mayHaveTag(ap, owner, cat("Allow", usage)),
   tag = cat("Does", usage).

.decl mismatchedPreferences(dataConsumer: Principal, usage: Usage, owner: Principal, tag: Tag)

mismatchedPreferences(owner, usage, owner, "RawAudio") :-
   isUsage(usage),
   !says_hasPreference(owner, usage, "RawAudio"),
   mayHaveTag(ap, owner, "RawAudio"),
   mayHaveTag(ap, owner, cat("Does", usage)),
   mayHaveTag(ap, owner, cat("Allow", usage)),
   tag = cat("Does", usage).

// Configure the inputs and outputs for the ambient demo.
.input edge
.input hasTag
.output mismatchedPreferences(IO=stdout)
.output says_hasPreference(IO=stdout)
.output saysMay(IO=stdout)
.output saysWill(IO=stdout)
.output mayHaveTag(IO=stdout)
.output says_hasTag(IO=stdout)
.output ownsAccessPath(IO=stdout)
.output says_hasPreference(IO=stdout)
.output saysMay(IO=stdout)
.output saysWill(IO=stdout)

