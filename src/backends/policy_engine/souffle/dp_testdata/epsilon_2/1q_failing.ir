// Modeling a single query that fails the epsilon analysis because the actual
// epsilon, 6, is greater than the global epsilon
module m0 {
  block b0 {
        %0 = core.input [name: "revenue_table"] ()
         //epsilon does not take into account sens analysis
        %1 = sql.filter [column: "revenue"] (%0) // { revenue > 100 }
        %location = sql.column_access [column: "location"] (%1)
        %2 = sql.group_by[] (%1, %location)
        %dp_data = privacy_mechanism [epsilon: 3] (%2)
        //epsilon set not to take into account sens. analysis (act. epsilon is 6)
        %3 = sql.average[] (%dp_data)
        %4 = sql.sql_output [] (%3) // Report the noisy average
    }
}
