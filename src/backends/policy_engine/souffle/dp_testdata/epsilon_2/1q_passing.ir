// Modeling a single query that passes the dp analysis:
// the actual epsilon 1 is smaller than the global epsilon
module m0 {
  block b0 {
        %0 = core.input [name: "revenue_table"] ()
        %1 = sql.filter [column: "revenue"] (%0) // { revenue > 100 }
        %location = sql.column_access [column: "location"] (%1)
        %2 = sql.order_by[] (%1, %location) // (%0, location)
        %dp_data = privacy_mechanism [epsilon: 1] (%2)
        %3 = sql.average [] (%dp_data)
        %4 = sql.sql_output [] (%3) // Report the noisy average
    }
}
