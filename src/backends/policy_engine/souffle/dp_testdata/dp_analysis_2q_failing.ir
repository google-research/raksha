// Modeling two queries that fail the dp analysis because the total epsilon (2 + 2 = 4)
// is greater than the global epsilon (3). 
module m0 {
  block b0 {
        %0 = core.input [name: "revenue_table"] ()  
        %epsilon = global_epsilon [epsilon: 3] ()
        //first query
        %1 = sql.filter [column: "revenue"] (%0) // { revenue > 100 }
        %location = sql.column_access [column: "location"] (%1)
        %2 = sql.group_by[] (%1, %location) // (%0, location)
        %dp_data = privacy_mechanism [epsilon: 1] (%2) //epsilon set to take into account sens. analysis (actual epsilon here is 2)
        %3 = sql.average [] (%dp_data)
        %4 = sql.output [] (%3) // Report the noisy average
        //second query
        %5 = sql.column_access [colum: "profit"] (%0)
        %6 = privacy_mechanism [epsilon: 2] (%5)
        %7 = sql.average [] (%6)
        %8 = sql.output [] (%7)
    }
}
