#ifndef SRC_ANALYSIS_SOUFFLE_EPSILON_ANALYSIS_DL_
#define SRC_ANALYSIS_SOUFFLE_EPSILON_ANALYSIS_DL_

#include "src/analysis/souffle/sensitivity_analysis.dl" 

.decl isGlobalEpsilon(epsilon: number)
//TODO: is there a way to set a deafault option?
isGlobalEpsilon(epsilon) :- isOperation([_, "global_epsilon", _, _, [["epsilon", $NumberAttributePayload(epsilon)], _]]).

.decl isDiffPrivacyMechanism(value: AccessPath, epsilon: number)
isDiffPrivacyMechanism(value, epsilon) :- isOperation([_, "privacy_mechanism", value, _, [["epsilon", $NumberAttributePayload(epsilon)], _]]). 

//propagate privacy mechanism for now
//not sure yet what the literature says how this should be done 
isDiffPrivacyMechanism(value, epsilon) :- isSqlInput(operation, sqlInput),
      operationHasResult(operation, value),
      isDiffPrivacyMechanism(sqlInput, epsilon). 

// sequential composition
.decl epsilonDiffPrivacy(value: AccessPath, epsilon: number)
epsilonDiffPrivacy(value, epsilon) :- isDiffPrivacyMechanism(value, _),
      epsilon = sum y : { isDiffPrivacyMechanism(value, y)}. 

sqlValueSensitivity(value, 1) :- isDiffPrivacyMechanism(value, _).

// DP Policies are violated when: 
// 1. There is a privacy mechanism applied to value, the value does not need sensitivity analysis, and 
//       the epsilon in the privacy mechanism is smaller than the global epsilon 
// 2. There is a privacy mechanism applied to value, the value has a particular sensitivity score, and  
//       the global epsilon is smaller than sensitvity * privacy mechanism epsilon
// 3. There is no privacy mechanism on a value that has a particular sensitivity score
violatesPolicy(value) :- isSqlOperation([_, _, value, _, _]), 
      !sqlValueSensitivity(value, _),
      epsilonDiffPrivacy(value, privacy_mechanism_epsilon), 
      isGlobalEpsilon(global_epsilon),
      global_epsilon < privacy_mechanism_epsilon;
      isGlobalEpsilon(global_epsilon),  
      sqlValueSensitivity(value, sensitivity_score), 
      epsilonDiffPrivacy(value, privacy_mechanism_epsilon), 
      global_epsilon < privacy_mechanism_epsilon * sensitivity_score; 
      isSqlOperation([_, _, value, _, _]),
      sqlValueSensitivity(value, _),
      !epsilonDiffPrivacy(value, _).


#endif //SRC_ANALYSIS_SOUFFLE_EPSILON_ANALYSIS_DL_
