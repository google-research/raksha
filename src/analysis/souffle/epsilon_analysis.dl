#ifndef SRC_ANALYSIS_SOUFFLE_EPSILON_ANALYSIS_DL_
#define SRC_ANALYSIS_SOUFFLE_EPSILON_ANALYSIS_DL_

#include "src/analysis/souffle/sensitivity_analysis.dl" 

.decl isGlobalEpsilon(epsilon: number)
isGlobalEpsilon(epsilon) :- isOperation([_, "global_epsilon", _, _, [["epsilon", $NumberAttributePayload(epsilon)], _]]).

.decl isDiffPrivacyMechanism(operation: Operation)
isDiffPrivacyMechanism(operation) :- isOperation(operation), 
    operationHasOperator(operation, "privacy_mechanism"). 

.decl diffPrivacyMechanismHasEpsilon(operation: Operation, epsilon: number)
diffPrivacyMechanismHasEpsilon(operation, epsilon) :- isDiffPrivacyMechanism(operation),
    operationHasAttribute(operation, ["epsilon", $NumberAttributePayload(epsilon)]).


//propagating privacy mechanisms backwards to input 
.decl isSqlPath(sql_input: AccessPath, sql_output: AccessPath)

isSqlPath(sql_input, sql_output):- isSqlOperation(operation), 
    isSqlInput(operation, sql_input),
    operationHasResult(operation, sql_output); 
    isDiffPrivacyMechanism(operation), 
    operationHasOperandList(operation, input_list), 
    flatten(input_list, sql_input),
    operationHasResult(operation, sql_output).  

isSqlPath(sql_input, sql_output):- isSqlOperation(operation), 
    isSqlInput(operation, sql_input), 
    operationHasResult(operation, intermediate_output), 
    isSqlPath(intermediate_output, sql_output);
    isDiffPrivacyMechanism(operation), 
    operationHasOperandList(operation, input_list), 
    flatten(input_list, sql_input), 
    isSqlPath(sql_input, intermediate_output),
    isSqlPath(intermediate_output, sql_output). 

// sequential composition
.decl epsilonDiffPrivacy(value: AccessPath, epsilon: number)
epsilonDiffPrivacy(value, epsilon) :- isSqlPath(value, sql_output),
      isDiffPrivacyMechanism(operation), 
      operationHasResult(operation, sql_output), 
      epsilon = sum y : { diffPrivacyMechanismHasEpsilon(operation, y)}. 

sqlValueSensitivity(value, 1) :- isDiffPrivacyMechanism(operation), 
    operationHasResult(operation, value).

// [WIP] DP Policies are violated when: 
// the local epsilon for a value used in sqlOperations as input (the value in isSqlPath)
// times the sensitivity of said sqlOperation is less than the global epsilon 
violatesPolicy(value) :- isSqlPath(value, sql_output), 
    isSqlOperation(operation), 
    operationHasResult(operation, sql_output), 
    sqlValueSensitivity(sql_output, sensitivity), 
    epsilonDiffPrivacy(value, epsilon), 
    isGlobalEpsilon(global_epsilon),
    global_epsilon < epsilon * sensitivity.


#endif //SRC_ANALYSIS_SOUFFLE_EPSILON_ANALYSIS_DL_
