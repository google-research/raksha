// UserA is the device owner. UserA has a high level of trust in their own
// device.
//
// Note: Currently, these policies are expressed as indicating principals that
// canSay downgrades. In addition to that, I have added
// a hasVoiceRecordingPreference annotation that expresses the actual
// configuration preference of the user. In a more fleshed-out system, we might
// want to have a check somewhere that imparts the downgrades power to
// MicCompute only if all principal refinements of userSpeech have preferences
// allowing storing textToSpeech. Right now, though, user refinement of tags is
// just an idea, so using downgrades directly.
"UserA" says {
  "UserA" hasVoiceRecordingPreference("AlwaysOK").
  "DevicePolicyAuthority" canSay downgrades(tagX) :- isTag(tagX).
}

// UserB is a guest user. UserB is somewhat privacy sensitive. They want their
// voice recorded only as a transcript and will only recognize authorities from
// companies that they trust.
"UserB" says {
  ownsTag("userSpeech").

  // UserB has a set of sensitive device tags, which it always wants a say in.
  sensitiveDeviceTag("userSpeech").

  // UserB has a set of trusted companies that they have ongoing relationships
  // with.
  "AWellKnownTechCompany" canActAs "TrustedCompany".

  // UserB claims ownership over any tag in the sensitive tag set.
  ownsTag(tagX) :- sensitiveDeviceTag(tagX).

  // UserB would like to only 
  "UserB" hasVoiceRecordingPreference("TranscriptOnly").

  // By default, UserB does not allow sensitive device tags to be downgraded.
  // (NOTE: this is commented out but it should compile once branch is updated 
  // to include the PR that adds `!`
  PolicyAuthorityX canSay downgrades(tagX) :-
    isTag(tagX), !sensitiveDeviceTag(tagX).

  // However, it does allow "TrustedCompany" to downgrade all of its tags.
  "TrustedCompany" canSay downgrades(tagX) :- isTag(tagX).

  isTag("userSpeech").
}

// UserC is a very privacy sensitive user. They do not trust anyone to store
// their voice information, even as a transcript.
"UserC" says {

  sensitiveDeviceTag("userSpeech").

  ownsTag(tagX) :- sensitiveDeviceTag(tagX).

  "UserC" hasVoiceRecordingPreference("Never").
}

// This is the device policy authority. It allows "MicCompute" to downgrade
// "userSpeech".
"DevicePolicyAuthority" says {
  "MicCompute" canSay downgrades("userSpeech").
}

// Why should users trust "DevicePolicyAuthority"? Because is recognized as an
// authority by "WellKnownTechCompany", with which they probably have a history
// of some degree of trust (or at least not active distrust).
"WellKnownTechCompany" says {
  recognizedAsAuthority("DevicePolicyAuthority").
}
