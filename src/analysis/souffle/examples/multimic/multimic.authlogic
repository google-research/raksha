.decl ownsAccessPath(user : Principal, path : AccessPath)
.decl hasTag(path : AccessPath, owner : Principal, tag : Tag)
.decl isAccessPath(path : AccessPath)
.decl ownsTag(principal : Principal, tag : Tag)

"UserA" says {
  ownsAccessPath("UserA", "DoASRUserAAndUserB.UserATainter.audioIn").
  ownsAccessPath("UserA", "DoASRUserAAndUserBAndUserC.UserATainter.audioIn").
}

"UserB" says {
  ownsAccessPath("UserB", "DoASRUserAAndUserB.UserBTainter.audioIn").
  ownsAccessPath("UserB", "DoASRUserAAndUserBAndUserC.UserBTainter.audioIn").
}

// UserC is a very privacy sensitive user. They do not trust anyone to perform
// ASR on their voice data.
"UserC" says {
  // TODO(#220): we should claim ownership at the level of handles rather recipe access paths.
  ownsAccessPath("UserC", "DoASRUserAAndUserBAndUserC.UserCTainter.audio").
  // We want to use canSay hasTag but cannot due to issue #195.
  "UserCTainter" canSay hasTag(pathX, "UserC", "asrDisallowed") :- isAccessPath(pathX).
  // TODO(#195) remove this ownership claim.
  ownsTag("UserCTainter", "asrDisallowed").
}
