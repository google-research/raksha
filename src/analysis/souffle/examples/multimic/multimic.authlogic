// UserC is a very privacy sensitive user. They do not trust anyone to perform
// ASR on their voice data.
"UserC" says {
  // TODO(bgogul): we should claim ownership at the level of handles rather recipe access paths.
  ownsAccessPath("UserC", "DoASRUserAAndUserBAndUserC.UserCTainter#5.audio").
  // We want to use canSay hasTag but cannot due to issue #195.
  "UserCTainter" canSay hasTag(pathX, "UserC", "asrDisallowed") :- isAccessPath(pathX).
  // TODO(#195) remove this ownership claim.
  ownsTag("UserCTainter", "asrDisallowed").
}

"UserA" says ownsAccessPath("UserA", "DoASRNoGuests.MicCompute#0.audioIn").
"UserB" says ownsAccessPath("UserB", "DoASRNoGuests.MicCompute#0.audioIn").
"UserC" says ownsAccessPath("UserC", "DoASRNoGuests.MicCompute#0.audioIn").
"UserA" says ownsAccessPath("UserA", "DoASRUserAAndUserB.MicCompute#0.audioIn").
"UserB" says ownsAccessPath("UserB", "DoASRUserAAndUserB.MicCompute#0.audioIn").
"UserC" says ownsAccessPath("UserC", "DoASRUserAAndUserB.MicCompute#0.audioIn").
"UserA" says ownsAccessPath("UserA", "DoASRUserAAndUserBAndUserC.MicCompute#0.audioIn").
"UserB" says ownsAccessPath("UserB", "DoASRUserAAndUserBAndUserC.MicCompute#0.audioIn").
"UserC" says ownsAccessPath("UserC", "DoASRUserAAndUserBAndUserC.MicCompute#0.audioIn").

