#include "taint.dl"
#include "fact_test_helper.dl"

.decl confidentialTag(tag: Tag)
confidentialTag(tag) :- isTag(tag), substr(tag, 0, strlen("conf_")) = "conf_".

allTests(cat("topQueryNotConfidential_", tag)) :- confidentialTag(tag).
testPasses(cat("topQueryNotConfidential_", tag)) :- confidentialTag(tag), (!mayHaveTag("top.exprResult", tag)).

.decl doesXform(ap: AccessPath, xform: symbol)
.decl hasIntegTag(ap: AccessPath, tag: Tag)
.decl hasValue(ap: AccessPath, value: symbol)
.decl isIntegTag(tag: Tag)
isIntegTag(tag) :- isTag(tag), substr(tag, 0, strlen("integ_")) = "integ_".
hasIntegTag(ap, tag) :- hasTag(ap, tag), isIntegTag(tag).
hasIntegTag(tgt, tag) :- isIntegTag(tag), resolvedEdge(src, tgt), hasIntegTag(src, tag), !doesXform(src, _).
