#ifndef SRC_ANALYSIS_SOUFFLE_ANALYZE_TAG_CHECKS_DL_
#define SRC_ANALYSIS_SOUFFLE_ANALYZE_TAG_CHECKS_DL_

#include "taint.dl"

// The `accessPath` has some check of `tag` performed on it that will pass. This includes, for
// instance:
//
// Checks that `tag` is present on `accessPath` when the `tag` will actually be present.
// Checks that `tag is absent on `accessPath` when the `tag` will not reach `accessPath`.
.decl passingTagCheck(accessPath: AccessPath, tag: Tag)

passingTagCheck(accessPath, tag) :-
  checkTagIsPresent(accessPath, tag), mayHaveTag(accessPath, tag).

// The presence or absence of `tag` on `accessPath` is checked.
.decl accessPathIsCheckedForTag(accessPath: AccessPath, tag: Tag)

accessPathIsCheckedForTag(accessPath, tag) :- checkTagIsPresent(accessPath, tag).

// The complement of `passingTagCheck`: all checks of tags on accessPaths that did not pass must
// have failed.
.decl failingTagCheck(accessPath: AccessPath, tag: Tag)
failingTagCheck(accessPath, tag) :-
  accessPathIsCheckedForTag(accessPath, tag), !passingTagCheck(accessPath, tag).

#endif // SRC_ANALYSIS_SOUFFLE_ANALYZE_TAG_CHECKS_DL_
