//-----------------------------------------------------------------------------
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//-----------------------------------------------------------------------------

#include "src/analysis/souffle/arcsjs_user_consent_to_downgrade.dl"
#include "src/analysis/souffle/fact_test_helper.dl"

#define TEST_N_RESULT_FOR_OPERATION(n, test_name, operation, relation, expected) \
  TEST_CASE(cat(test_name, cat("_", #relation))) :- \
    count : { relation(operation, expected) } = n, \
    count : { relation(operation, _) } = n

#define CREATE_AND_TEST_OPERATOR_INNER(n_from_tags, n_to_tags, n_data, n_intent, test_name, operation, from, to, data, intent) \
  isOperation(operation). \
  TEST_N_RESULT_FOR_OPERATION(n_from_tags, test_name, (operation), arcsJsUserConsentToDowngradeOperationHasDowngradeFromTag, from). \
  TEST_N_RESULT_FOR_OPERATION(n_to_tags, test_name, (operation), arcsJsUserConsentToDowngradeOperationHasDowngradeToTag, to). \
  TEST_N_RESULT_FOR_OPERATION(n_data, test_name, (operation), arcsJsUserConsentToDowngradeOperationHasData, data). \
  TEST_N_RESULT_FOR_OPERATION(n_intent, test_name, (operation), arcsJsUserConsentToDowngradeOperationHasIntent, intent)

#define CREATE_AND_TEST_OPERATION(n_from_tags, n_to_tags, n_data, n_intent, test_name, owner, operator, resultList, operandList, attrList, from, to, data, intent) \
  CREATE_AND_TEST_OPERATOR_INNER(n_from_tags, n_to_tags, n_data, n_intent, test_name, ([owner, operator, resultList, (operandList), (attrList)]), from, to, data, intent)

#define ATTR_LIST1 [["downgrade_to", $StringAttributePayload("public")], [["downgrade_from", $StringAttributePayload("private")], nil]]
#define OPERAND_LIST1 ["operand1", ["operand2", nil]]

CREATE_AND_TEST_OPERATION(1, 1, 1, 1, "test1_user_downgrade", "somePrincipal", "arcsjs.user_consent_to_downgrade", (["ap1", nil]), (OPERAND_LIST1), (ATTR_LIST1), "private", "public", "operand1", "operand2").

#define ATTR_LIST2 [["downgrade_to", $StringAttributePayload("public")], [["downgrade_from", $StringAttributePayload("private")], [["other_tag", $NumberAttributePayload(2)], nil]]]
#define OPERAND_LIST2 ["operand1", ["operand2", nil]]

CREATE_AND_TEST_OPERATION(1, 1, 1, 1, "test2_user_downgrade_ignores_extra_tags", "somePrincipal", "arcsjs.user_consent_to_downgrade", (["ap1", nil]), (OPERAND_LIST2), (ATTR_LIST2), "private", "public", "operand1", "operand2").

#define ATTR_LIST3 [["downgrade_to", $StringAttributePayload("public")], [["downgrade_from", $StringAttributePayload("private")], [["other_tag", $NumberAttributePayload(2)], nil]]]
#define OPERAND_LIST3 ["operand1", ["operand2", ["operand3", nil]]]

CREATE_AND_TEST_OPERATION(1, 1, 1, 1, "test3_user_downgrade_ignores_extra_args", "somePrincipal", "arcsjs.user_consent_to_downgrade", (["ap1", nil]), (OPERAND_LIST3), (ATTR_LIST3), "private", "public", "operand1", "operand2").

#define ATTR_LIST4 [["downgrade_to", $StringAttributePayload("public")], [["other_tag", $NumberAttributePayload(2)], nil]]
#define OPERAND_LIST4 ["operand1", ["operand2", ["operand3", nil]]]

CREATE_AND_TEST_OPERATION(0, 0, 0, 0, "test4_user_downgrade_requires_from_tag", "somePrincipal", "arcsjs.user_consent_to_downgrade", (["ap1", nil]), (OPERAND_LIST4), (ATTR_LIST4), _, _, _, _).

#define ATTR_LIST5 [["downgrade_from", $StringAttributePayload("private")], [["other_tag", $NumberAttributePayload(2)], nil]]
#define OPERAND_LIST5 ["operand1", ["operand2", ["operand3", nil]]]

CREATE_AND_TEST_OPERATION(0, 0, 0, 0, "test5_user_downgrade_requires_to_tag", "somePrincipal", "arcsjs.user_consent_to_downgrade", (["ap1", nil]), (OPERAND_LIST5), (ATTR_LIST5), _, _, _, _).

#define ATTR_LIST6 [["downgrade_to", $StringAttributePayload("public")], [["downgrade_from", $StringAttributePayload("private")], [["other_tag", $NumberAttributePayload(2)], nil]]]
#define OPERAND_LIST6 ["operand1", nil]

CREATE_AND_TEST_OPERATION(0, 0, 0, 0, "test6_user_downgrade_requires_data_and_intent_args", "somePrincipal", "arcsjs.user_consent_to_downgrade", (["ap1", nil]), (OPERAND_LIST6), (ATTR_LIST6), _, _, _, _).