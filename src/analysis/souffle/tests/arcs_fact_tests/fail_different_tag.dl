//-----------------------------------------------------------------------------
// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//-----------------------------------------------------------------------------
// Original Arcs manifest:
// Note: We have changed this test from the original Arcs manifest test by renaming the tags
// "trusted" and "notTrusted" to "screenContent" and "userSelection", as the tags in this test spread like
// confidentiality tags.
// Fails when different tag is claimed.
// #Ingress: P1
// #Fail: hc:P2.bar is screenContent
//particle P1
//  foo: writes Foo {}
//  claim foo is userSelection
//particle P2
//  bar: reads Foo {}
//  check bar is screenContent
//recipe R
//  P1
//    foo: writes h
//  P2
//    bar: reads h
//
// The below fact-based test is hand-derived from the above Arcs manifest test.
#include "src/analysis/souffle/taint.dl"
#include "src/analysis/souffle/fact_test_helper.dl"

says_hasTag("P1", "R.P1.foo", "P1", ["userSelection", nil]).
edge("R.P1.foo", "R.h.Foo").
edge("R.h.Foo", "R.P2.bar").

CHECK_TAG_NOT_PRESENT("R.P2.bar", "P1", ["screenContent", nil]).
CHECK_TAG_PRESENT("R.P2.bar", "P1", ["userSelection", nil]).
