# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#-------------------------------------------------------------------------------
# Based on https://github.com/kythe/kythe/blob/fe68af/third_party/souffle.BUILD
#-------------------------------------------------------------------------------
load("@rules_flex//flex:flex.bzl", "flex_cc_library")
load("@rules_bison//bison:bison.bzl", "bison_cc_library")

package(default_visibility = ["//visibility:public"])

licenses(["notice"])  # The Universal Permissive License (UPL), Version 1.0

filegroup(
    name = "license",
    srcs = ["LICENSE"],
)

genrule(
    name = "parser_gen",
    srcs = ["src/parser/parser.yy"],
    outs = [
        "src/parser/parser.cc",
        "src/parser/parser.hh",
        "src/parser/stack.hh",
    ],
    cmd = "M4=$(M4) $(BISON) -d --warnings=none --output=$(RULEDIR)/src/parser/parser.cc $<",
    toolchains = [
        "@rules_bison//bison:current_bison_toolchain",
        "@rules_m4//m4:current_m4_toolchain",
    ],
)

genrule(
    name = "scanner_gen",
    srcs = ["src/parser/scanner.ll"],
    outs = ["scanner.yy.cc"],
    cmd = "M4=$(M4) $(FLEX) --outfile=$@ $<",
    toolchains = [
        "@rules_flex//flex:current_flex_toolchain",
        "@rules_m4//m4:current_m4_toolchain",
    ],
)

cc_library(
    name = "souffle_lib",
    srcs = glob(
        ["src/**/*.cpp"],
        exclude = [
            "src/include/**",
            "src/tests/**",
            "src/ram/tests/**",
            "src/ast/tests/**",
            "src/interpreter/tests/**",
            "src/main.cpp",
            "src/souffle_prof.cpp",
        ],
    ) + [
        ":scanner_gen",
        ":parser_gen",
    ],
    hdrs = glob(["src/**/*.h"]) + [":parser_gen"],
    copts = [
        "-std=c++17",
        # We don't want warnings in 3rd party packages to obscure issues in our
        # own code that we are more likely to need to fix.
        "-w",
    ],
    includes = [
        "src",
        "src/include",
    ],
    linkopts = select({
        "@bazel_tools//src/conditions:linux_x86_64": [
            "-ldl",
        ],
        "//conditions:default": [
        ],
    }),
    deps = [
        "@org_sourceware_libffi//:libffi",
    ],
)

cc_library(
  name = "souffle_include_lib",
  hdrs = glob(["src/**/*.h"]),
  copts = [
      "-std=c++17",
      # We don't want warnings in 3rd party packages to obscure issues in our
      # own code that we are more likely to need to fix.
      "-w",
  ],
  includes = [
      "src",
      "src/include",
  ],
)

cc_binary(
    name = "souffle",
    srcs = ["src/main.cpp"],
    copts = [
        "-std=c++17",
        # We don't want warnings in 3rd party packages to obscure issues in our
        # own code that we are more likely to need to fix.
        "-w",
    ],
    linkopts = ["-pthread"],
    deps = [":souffle_lib"],
)
